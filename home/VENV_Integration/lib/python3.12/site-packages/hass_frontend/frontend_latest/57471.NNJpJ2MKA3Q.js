export const id=57471;export const ids=[57471];export const modules={96961:(e,t,a)=>{a.d(t,{JW:()=>g,OW:()=>u,PO:()=>p,VN:()=>c,XG:()=>_,eB:()=>m,gZ:()=>h,hM:()=>l,k2:()=>r,lU:()=>v,nc:()=>f,vX:()=>y,z1:()=>o});a(24545),a(51855),a(82130),a(31743),a(22328),a(4959),a(62435),a(253),a(2075),a(94438),a(16891);var s=a(16312),i=a(10725),n=a(33922),d=a(23712);let o=function(e){return e.THREAD="thread",e.WIFI="wifi",e.ETHERNET="ethernet",e.UNKNOWN="unknown",e}({});const r=e=>e.auth.external?.config.canCommissionMatter,c=async e=>{if((0,n.x)(e,"thread")){const t=(await(0,d.sL)(e)).datasets.find((e=>e.preferred));if(t)return e.auth.external.fireMessage({type:"matter/commission",payload:{active_operational_dataset:(await(0,d.dy)(e,t.dataset_id)).tlv,border_agent_id:t.preferred_border_agent_id,mac_extended_address:t.preferred_extended_address,extended_pan_id:t.extended_pan_id}})}return e.auth.external.fireMessage({type:"matter/commission"})},l=(e,t)=>{let a;const n=(0,i.Ag)(e.connection,(e=>{if(!a)return void(a=new Set(Object.values(e).filter((e=>e.identifiers.find((e=>"matter"===e[0])))).map((e=>e.id))));const i=Object.values(e).filter((e=>e.identifiers.find((e=>"matter"===e[0]))&&!a.has(e.id)));i.length&&(n(),a=void 0,t?.(),(0,s.o)(`/config/devices/device/${i[0].id}`))}));return()=>{n(),a=void 0}},p=(e,t)=>e.callWS({type:"matter/commission",code:t}),_=(e,t)=>e.callWS({type:"matter/commission_on_network",pin:t}),v=(e,t,a)=>e.callWS({type:"matter/set_wifi_credentials",network_name:t,password:a}),h=(e,t)=>e.callWS({type:"matter/set_thread",thread_operation_dataset:t}),m=(e,t)=>e.callWS({type:"matter/node_diagnostics",device_id:t}),u=(e,t)=>e.callWS({type:"matter/ping_node",device_id:t}),f=(e,t)=>e.callWS({type:"matter/open_commissioning_window",device_id:t}),y=(e,t,a)=>e.callWS({type:"matter/remove_matter_fabric",device_id:t,fabric_index:a}),g=(e,t)=>e.callWS({type:"matter/interview_node",device_id:t})},23712:(e,t,a)=>{a.d(t,{It:()=>o,W4:()=>c,dy:()=>d,l1:()=>l,rY:()=>r,sL:()=>n,wm:()=>i});class s{constructor(){this.routers=void 0,this.routers={}}processEvent(e){return"router_discovered"===e.type?this.routers[e.key]=e.data:"router_removed"===e.type&&delete this.routers[e.key],Object.values(this.routers)}}const i=(e,t)=>{const a=new s;return e.connection.subscribeMessage((e=>t(a.processEvent(e))),{type:"thread/discover_routers"})},n=e=>e.callWS({type:"thread/list_datasets"}),d=(e,t)=>e.callWS({type:"thread/get_dataset_tlv",dataset_id:t}),o=(e,t,a)=>e.callWS({type:"thread/add_dataset_tlv",source:t,tlv:a}),r=(e,t)=>e.callWS({type:"thread/delete_dataset",dataset_id:t}),c=(e,t)=>e.callWS({type:"thread/set_preferred_dataset",dataset_id:t}),l=(e,t,a,s)=>e.callWS({type:"thread/set_preferred_border_agent",dataset_id:t,border_agent_id:a,extended_address:s})},57471:(e,t,a)=>{a.r(t),a.d(t,{HaDeviceInfoMatter:()=>l});var s=a(36312),i=a(68689),n=(a(16891),a(15112)),d=a(77706),o=(a(15720),a(96961)),r=(a(63893),a(13830),a(20712)),c=a(55321);let l=(0,s.A)([(0,d.EM)("ha-device-info-matter")],(function(e,t){class a extends t{constructor(...t){super(...t),e(this)}}return{F:a,d:[{kind:"field",decorators:[(0,d.MZ)({attribute:!1})],key:"hass",value:void 0},{kind:"field",decorators:[(0,d.MZ)({attribute:!1})],key:"device",value:void 0},{kind:"field",decorators:[(0,d.wk)()],key:"_nodeDiagnostics",value:void 0},{kind:"method",key:"willUpdate",value:function(e){(0,i.A)(a,"willUpdate",this,3)([e]),e.has("device")&&this._fetchNodeDetails()}},{kind:"method",key:"_fetchNodeDetails",value:async function(){if(this.device&&null===this.device.via_device_id)try{this._nodeDiagnostics=await(0,o.eB)(this.hass,this.device.id)}catch(e){this._nodeDiagnostics=void 0}}},{kind:"method",key:"render",value:function(){return this._nodeDiagnostics?n.qy` <ha-expansion-panel .header="${this.hass.localize("ui.panel.config.matter.device_info.device_info")}"> <div class="row"> <span class="name">${this.hass.localize("ui.panel.config.matter.device_info.node_id")}:</span> <span class="value">${this._nodeDiagnostics.node_id}</span> </div> <div class="row"> <span class="name">${this.hass.localize("ui.panel.config.matter.device_info.network_type")}:</span> <span class="value">${this.hass.localize(`ui.panel.config.matter.network_type.${this._nodeDiagnostics.network_type}`)}</span> </div> <div class="row"> <span class="name">${this.hass.localize("ui.panel.config.matter.device_info.node_type")}:</span> <span class="value">${this.hass.localize(`ui.panel.config.matter.node_type.${this._nodeDiagnostics.node_type}`)}</span> </div> ${this._nodeDiagnostics.network_name?n.qy` <div class="row"> <span class="name">${this.hass.localize("ui.panel.config.matter.device_info.network_name")}:</span> <span class="value">${this._nodeDiagnostics.network_name}</span> </div> `:n.s6} ${this._nodeDiagnostics.mac_address?n.qy` <div class="row"> <span class="name">${this.hass.localize("ui.panel.config.matter.device_info.mac_address")}:</span> <span class="value">${this._nodeDiagnostics.mac_address}</span> </div> `:n.s6} <div class="row"> <span class="name">${this.hass.localize("ui.panel.config.matter.device_info.ip_adresses")}:</span> <span class="value">${this._nodeDiagnostics.ip_adresses.map((e=>n.qy`${e}<br>`))}</span> </div> </ha-expansion-panel> `:n.s6}},{kind:"get",static:!0,key:"styles",value:function(){return[c.RF,n.AH`h4{margin-bottom:4px}div{word-break:break-all;margin-top:2px}.row{display:flex;justify-content:space-between;padding-bottom:4px}.value{text-align:right}ha-expansion-panel{margin:8px -16px 0;--expansion-panel-summary-padding:0 16px;--expansion-panel-content-padding:0 16px;--ha-card-border-radius:0px}`]}}]}}),(0,r.E)(n.WF))}};
//# sourceMappingURL=57471.NNJpJ2MKA3Q.js.map