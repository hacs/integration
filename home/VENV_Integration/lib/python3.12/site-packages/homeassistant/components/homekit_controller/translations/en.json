{
    "config": {
        "abort": {
            "accessory_not_found_error": "Cannot add pairing as device can no longer be found.",
            "already_configured": "Accessory is already configured with this controller.",
            "already_in_progress": "Configuration flow is already in progress",
            "already_paired": "This accessory is already paired to another device. Please reset the accessory and try again.",
            "ignored_model": "HomeKit support for this model is blocked as a more feature complete native integration is available.",
            "invalid_config_entry": "This device is showing as ready to pair but there is already a conflicting configuration entry for it in Home Assistant that must first be removed.",
            "invalid_properties": "Invalid properties announced by device.",
            "no_devices": "No unpaired devices could be found"
        },
        "error": {
            "authentication_error": "Incorrect HomeKit code. Please check it and try again.",
            "insecure_setup_code": "The requested setup code is insecure because of its trivial nature. This accessory fails to meet basic security requirements.",
            "max_peers_error": "Device refused to add pairing as it has no free pairing storage.",
            "pairing_failed": "An unhandled error occurred while attempting to pair with this device. This may be a temporary failure or your device may not be supported currently: {error}",
            "unable_to_pair": "Unable to pair, please try again.",
            "unknown_error": "Device reported an unknown error. Pairing failed."
        },
        "flow_title": "{name} ({category})",
        "step": {
            "busy_error": {
                "description": "Abort pairing on all controllers, or try restarting the device, then continue to resume pairing.",
                "title": "The device is already pairing with another controller"
            },
            "max_tries_error": {
                "description": "The device has received more than 100 unsuccessful authentication attempts. Try restarting the device, then continue to resume pairing.",
                "title": "Maximum authentication attempts exceeded"
            },
            "pair": {
                "data": {
                    "allow_insecure_setup_codes": "Allow pairing with insecure setup codes.",
                    "pairing_code": "Pairing Code"
                },
                "description": "HomeKit Device communicates with {name} ({category}) over the local area network using a secure encrypted connection without a separate HomeKit Controller or iCloud. Enter your eight digit HomeKit pairing code (in the format XXX-XX-XXX) to use this accessory. This code is usually found on the device itself or in the packaging, often close to a HomeKit bar code, next to the image of a small house.",
                "title": "Pair with a device via HomeKit Accessory Protocol"
            },
            "protocol_error": {
                "description": "The device may not be in pairing mode and may require a physical or virtual button press. Ensure the device is in pairing mode or try restarting the device, then continue to resume pairing.",
                "title": "Error communicating with the accessory"
            },
            "user": {
                "data": {
                    "device": "Device"
                },
                "description": "HomeKit Device communicates over the local area network using a secure encrypted connection without a separate HomeKit Controller or iCloud. Select the device you want to pair with:",
                "title": "Device selection"
            }
        }
    },
    "device_automation": {
        "trigger_subtype": {
            "button1": "Button 1",
            "button10": "Button 10",
            "button2": "Button 2",
            "button3": "Button 3",
            "button4": "Button 4",
            "button5": "Button 5",
            "button6": "Button 6",
            "button7": "Button 7",
            "button8": "Button 8",
            "button9": "Button 9",
            "doorbell": "Doorbell"
        },
        "trigger_type": {
            "double_press": "\"{subtype}\" pressed twice",
            "long_press": "\"{subtype}\" pressed and held",
            "single_press": "\"{subtype}\" pressed"
        }
    },
    "entity": {
        "event": {
            "button": {
                "state_attributes": {
                    "event_type": {
                        "state": {
                            "double_press": "Double press",
                            "long_press": "Long press",
                            "single_press": "Single press"
                        }
                    }
                }
            },
            "doorbell": {
                "state_attributes": {
                    "event_type": {
                        "state": {
                            "double_press": "Double press",
                            "long_press": "Long press",
                            "single_press": "Single press"
                        }
                    }
                }
            }
        },
        "select": {
            "air_purifier_state_target": {
                "state": {
                    "automatic": "Automatic",
                    "manual": "Manual"
                }
            },
            "ecobee_mode": {
                "state": {
                    "away": "Away",
                    "home": "Home",
                    "sleep": "Sleep"
                }
            },
            "temperature_display_units": {
                "state": {
                    "celsius": "Celsius",
                    "fahrenheit": "Fahrenheit"
                }
            }
        },
        "sensor": {
            "air_purifier_state_current": {
                "state": {
                    "idle": "Idle",
                    "inactive": "Inactive",
                    "purifying": "Purifying"
                }
            },
            "thread_node_capabilities": {
                "state": {
                    "border_router_capable": "Border Router Capable",
                    "full": "Full End Device",
                    "minimal": "Minimal End Device",
                    "none": "None",
                    "router_eligible": "Router Eligible End Device",
                    "sleepy": "Sleepy End Device"
                }
            },
            "thread_status": {
                "state": {
                    "border_router": "Border Router",
                    "child": "Child",
                    "detached": "Detached",
                    "disabled": "Disabled",
                    "joining": "Joining",
                    "leader": "Leader",
                    "router": "Router"
                }
            }
        }
    },
    "title": "HomeKit Device"
}