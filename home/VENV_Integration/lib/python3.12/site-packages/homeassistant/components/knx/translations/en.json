{
    "config": {
        "abort": {
            "already_configured": "Service is already configured",
            "single_instance_allowed": "Already configured. Only a single configuration possible."
        },
        "error": {
            "cannot_connect": "Failed to connect",
            "invalid_backbone_key": "Invalid backbone key. 32 hexadecimal numbers expected.",
            "invalid_individual_address": "Value does not match pattern for KNX individual address.\n'area.line.device'",
            "invalid_ip_address": "Invalid IPv4 address.",
            "keyfile_invalid_signature": "The password to decrypt the `.knxkeys` file is wrong.",
            "keyfile_no_backbone_key": "The `.knxkeys` file does not contain a backbone key for secure routing.",
            "keyfile_no_tunnel_for_host": "The `.knxkeys` file does not contain credentials for host `{host}`.",
            "keyfile_not_found": "The specified `.knxkeys` file was not found in the path config/.storage/knx/",
            "no_router_discovered": "No KNXnet/IP router was discovered on the network.",
            "no_tunnel_discovered": "Could not find a KNX tunneling server on your network.",
            "unsupported_tunnel_type": "Selected tunnelling type not supported by gateway."
        },
        "step": {
            "connection_type": {
                "data": {
                    "connection_type": "KNX Connection Type"
                },
                "description": "Please enter the connection type we should use for your KNX connection. \n AUTOMATIC - The integration takes care of the connectivity to your KNX Bus by performing a gateway scan. \n TUNNELING - The integration will connect to your KNX bus via tunneling. \n ROUTING - The integration will connect to your KNX bus via routing.",
                "title": "KNX connection"
            },
            "knxkeys_tunnel_select": {
                "data": {
                    "user_id": "`Automatic` will use the first free tunnel endpoint."
                },
                "description": "Select the tunnel used for connection.",
                "title": "Tunnel endpoint"
            },
            "manual_tunnel": {
                "data": {
                    "host": "Host",
                    "local_ip": "Local IP interface",
                    "port": "Port",
                    "route_back": "Route back / NAT mode",
                    "tunneling_type": "KNX Tunneling Type"
                },
                "data_description": {
                    "host": "IP address or hostname of the KNX/IP tunneling device.",
                    "local_ip": "Local IP or interface name used for the connection from Home Assistant. Leave blank to use auto-discovery.",
                    "port": "Port of the KNX/IP tunneling device.",
                    "route_back": "Enable if your KNXnet/IP tunneling server is behind NAT. Only applies for UDP connections."
                },
                "description": "Please enter the connection information of your tunneling device.",
                "title": "Tunnel settings"
            },
            "routing": {
                "data": {
                    "individual_address": "Individual address",
                    "local_ip": "Local IP interface",
                    "multicast_group": "Multicast group",
                    "multicast_port": "Multicast port",
                    "routing_secure": "Use KNX IP Secure"
                },
                "data_description": {
                    "individual_address": "KNX address to be used by Home Assistant, e.g. `0.0.4`",
                    "local_ip": "Local IP or interface name used for the connection from Home Assistant. Leave blank to use auto-discovery."
                },
                "description": "Please configure the routing options.",
                "title": "Routing"
            },
            "secure_key_source": {
                "description": "Select how you want to configure KNX/IP Secure.",
                "menu_options": {
                    "secure_knxkeys": "Use a `.knxkeys` file containing IP secure keys",
                    "secure_routing_manual": "Configure IP secure backbone key manually",
                    "secure_tunnel_manual": "Configure IP secure credentials manually"
                },
                "title": "KNX IP-Secure"
            },
            "secure_key_source_menu_routing": {
                "description": "Select how you want to configure KNX/IP Secure.",
                "menu_options": {
                    "secure_knxkeys": "Use a `.knxkeys` file containing IP secure keys",
                    "secure_routing_manual": "Configure IP secure backbone key manually"
                },
                "title": "KNX IP-Secure"
            },
            "secure_key_source_menu_tunnel": {
                "description": "Select how you want to configure KNX/IP Secure.",
                "menu_options": {
                    "secure_knxkeys": "Use a `.knxkeys` file containing IP secure keys",
                    "secure_tunnel_manual": "Configure IP secure credentials manually"
                },
                "title": "KNX IP-Secure"
            },
            "secure_knxkeys": {
                "data": {
                    "knxkeys_file": "Keyring file",
                    "knxkeys_password": "The password to decrypt the `.knxkeys` file"
                },
                "data_description": {
                    "knxkeys_password": "This was set when exporting the file from ETS."
                },
                "description": "Please select a `.knxkeys` file to import.",
                "title": "Import KNX Keyring"
            },
            "secure_routing_manual": {
                "data": {
                    "backbone_key": "Backbone key",
                    "sync_latency_tolerance": "Network latency tolerance"
                },
                "data_description": {
                    "backbone_key": "Can be seen in the 'Security' report of an ETS project. Eg. '00112233445566778899AABBCCDDEEFF'",
                    "sync_latency_tolerance": "Default is 1000."
                },
                "description": "Please enter your IP secure information.",
                "title": "Secure routing"
            },
            "secure_tunnel_manual": {
                "data": {
                    "device_authentication": "Device authentication password",
                    "user_id": "User ID",
                    "user_password": "User password"
                },
                "data_description": {
                    "device_authentication": "This is set in the 'IP' panel of the interface in ETS.",
                    "user_id": "This is often tunnel number +1. So 'Tunnel 2' would have User-ID '3'.",
                    "user_password": "Password for the specific tunnel connection set in the 'Properties' panel of the tunnel in ETS."
                },
                "description": "Please enter your IP secure information.",
                "title": "Secure tunnelling"
            },
            "tunnel": {
                "data": {
                    "gateway": "KNX Tunnel Connection"
                },
                "description": "Please select a gateway from the list.",
                "title": "Tunnel"
            }
        }
    },
    "device_automation": {
        "extra_fields": {
            "destination": "Group addresses",
            "group_value_read": "GroupValueRead",
            "group_value_response": "GroupValueResponse",
            "group_value_write": "GroupValueWrite",
            "incoming": "Incoming",
            "outgoing": "Outgoing"
        },
        "extra_fields_descriptions": {
            "destination": "The trigger will listen to telegrams sent or received on these group addresses. If no address is selected, the trigger will fire for every group address.",
            "group_value_read": "Listen on GroupValueRead telegrams.",
            "group_value_response": "Listen on GroupValueResponse telegrams.",
            "group_value_write": "Listen on GroupValueWrite telegrams.",
            "incoming": "Listen on incoming telegrams.",
            "outgoing": "Listen on outgoing telegrams."
        },
        "trigger_type": {
            "telegram": "Telegram"
        }
    },
    "entity": {
        "climate": {
            "knx_climate": {
                "state_attributes": {
                    "preset_mode": {
                        "name": "Preset",
                        "state": {
                            "auto": "Auto",
                            "building_protection": "Building protection",
                            "comfort": "Comfort",
                            "economy": "Eco",
                            "standby": "Standby"
                        }
                    }
                }
            }
        },
        "sensor": {
            "connected_since": {
                "name": "Connection established"
            },
            "connection_type": {
                "name": "Connection type"
            },
            "individual_address": {
                "name": "Individual address"
            },
            "telegram_count": {
                "name": "Telegrams"
            },
            "telegrams_incoming": {
                "name": "Incoming telegrams"
            },
            "telegrams_incoming_error": {
                "name": "Incoming telegram errors"
            },
            "telegrams_outgoing": {
                "name": "Outgoing telegrams"
            },
            "telegrams_outgoing_error": {
                "name": "Outgoing telegram errors"
            }
        }
    },
    "issues": {
        "migrate_notify": {
            "fix_flow": {
                "step": {
                    "confirm": {
                        "description": "The KNX `notify` service has been migrated. New `notify` entities are available now.\n\nUpdate any automations to use the new `notify.send_message` exposed by these new entities. When this is done, fix this issue and restart Home Assistant.",
                        "title": "Disable legacy KNX notify service"
                    }
                }
            },
            "title": "Migration of KNX notify service"
        }
    },
    "options": {
        "error": {
            "cannot_connect": "Failed to connect",
            "invalid_backbone_key": "Invalid backbone key. 32 hexadecimal numbers expected.",
            "invalid_individual_address": "Value does not match pattern for KNX individual address.\n'area.line.device'",
            "invalid_ip_address": "Invalid IPv4 address.",
            "keyfile_invalid_signature": "The password to decrypt the `.knxkeys` file is wrong.",
            "keyfile_no_backbone_key": "The `.knxkeys` file does not contain a backbone key for secure routing.",
            "keyfile_no_tunnel_for_host": "The `.knxkeys` file does not contain credentials for host `{host}`.",
            "keyfile_not_found": "The specified `.knxkeys` file was not found in the path config/.storage/knx/",
            "no_router_discovered": "No KNXnet/IP router was discovered on the network.",
            "no_tunnel_discovered": "Could not find a KNX tunneling server on your network.",
            "unsupported_tunnel_type": "Selected tunnelling type not supported by gateway."
        },
        "step": {
            "communication_settings": {
                "data": {
                    "rate_limit": "Rate limit",
                    "state_updater": "State updater",
                    "telegram_log_size": "Telegram history limit"
                },
                "data_description": {
                    "rate_limit": "Maximum outgoing telegrams per second.\n`0` to disable limit. Recommended: 0 or 20 to 40",
                    "state_updater": "Set default for reading states from the KNX Bus. When disabled, Home Assistant will not actively retrieve entity states from the KNX Bus. Can be overridden by `sync_state` entity options.",
                    "telegram_log_size": "Telegrams to keep in memory for KNX panel group monitor. Maximum: {telegram_log_size_max}"
                },
                "title": "Communication settings"
            },
            "connection_type": {
                "data": {
                    "connection_type": "KNX Connection Type"
                },
                "description": "Please enter the connection type we should use for your KNX connection. \n AUTOMATIC - The integration takes care of the connectivity to your KNX Bus by performing a gateway scan. \n TUNNELING - The integration will connect to your KNX bus via tunneling. \n ROUTING - The integration will connect to your KNX bus via routing.",
                "title": "KNX connection"
            },
            "init": {
                "menu_options": {
                    "communication_settings": "Communication settings",
                    "connection_type": "Configure KNX interface",
                    "secure_knxkeys": "Import a `.knxkeys` file"
                },
                "title": "KNX Settings"
            },
            "knxkeys_tunnel_select": {
                "data": {
                    "user_id": "`Automatic` will use the first free tunnel endpoint."
                },
                "description": "Select the tunnel used for connection.",
                "title": "Tunnel endpoint"
            },
            "manual_tunnel": {
                "data": {
                    "host": "Host",
                    "local_ip": "Local IP interface",
                    "port": "Port",
                    "route_back": "Route back / NAT mode",
                    "tunneling_type": "KNX Tunneling Type"
                },
                "data_description": {
                    "host": "IP address or hostname of the KNX/IP tunneling device.",
                    "local_ip": "Local IP or interface name used for the connection from Home Assistant. Leave blank to use auto-discovery.",
                    "port": "Port of the KNX/IP tunneling device.",
                    "route_back": "Enable if your KNXnet/IP tunneling server is behind NAT. Only applies for UDP connections."
                },
                "description": "Please enter the connection information of your tunneling device.",
                "title": "Tunnel settings"
            },
            "options_init": {
                "menu_options": {
                    "communication_settings": "Communication settings",
                    "connection_type": "Configure KNX interface",
                    "secure_knxkeys": "Import a `.knxkeys` file"
                },
                "title": "KNX Settings"
            },
            "routing": {
                "data": {
                    "individual_address": "Individual address",
                    "local_ip": "Local IP interface",
                    "multicast_group": "Multicast group",
                    "multicast_port": "Multicast port",
                    "routing_secure": "Use KNX IP Secure"
                },
                "data_description": {
                    "individual_address": "KNX address to be used by Home Assistant, e.g. `0.0.4`",
                    "local_ip": "Local IP or interface name used for the connection from Home Assistant. Leave blank to use auto-discovery."
                },
                "description": "Please configure the routing options.",
                "title": "Routing"
            },
            "secure_key_source": {
                "description": "Select how you want to configure KNX/IP Secure.",
                "menu_options": {
                    "secure_knxkeys": "Use a `.knxkeys` file containing IP secure keys",
                    "secure_routing_manual": "Configure IP secure backbone key manually",
                    "secure_tunnel_manual": "Configure IP secure credentials manually"
                },
                "title": "KNX IP-Secure"
            },
            "secure_key_source_menu_routing": {
                "description": "Select how you want to configure KNX/IP Secure.",
                "menu_options": {
                    "secure_knxkeys": "Use a `.knxkeys` file containing IP secure keys",
                    "secure_routing_manual": "Configure IP secure backbone key manually"
                },
                "title": "KNX IP-Secure"
            },
            "secure_key_source_menu_tunnel": {
                "description": "Select how you want to configure KNX/IP Secure.",
                "menu_options": {
                    "secure_knxkeys": "Use a `.knxkeys` file containing IP secure keys",
                    "secure_tunnel_manual": "Configure IP secure credentials manually"
                },
                "title": "KNX IP-Secure"
            },
            "secure_knxkeys": {
                "data": {
                    "knxkeys_file": "Keyring file",
                    "knxkeys_password": "The password to decrypt the `.knxkeys` file"
                },
                "data_description": {
                    "knxkeys_password": "This was set when exporting the file from ETS."
                },
                "description": "Please select a `.knxkeys` file to import.",
                "title": "Import KNX Keyring"
            },
            "secure_routing_manual": {
                "data": {
                    "backbone_key": "Backbone key",
                    "sync_latency_tolerance": "Network latency tolerance"
                },
                "data_description": {
                    "backbone_key": "Can be seen in the 'Security' report of an ETS project. Eg. '00112233445566778899AABBCCDDEEFF'",
                    "sync_latency_tolerance": "Default is 1000."
                },
                "description": "Please enter your IP secure information.",
                "title": "Secure routing"
            },
            "secure_tunnel_manual": {
                "data": {
                    "device_authentication": "Device authentication password",
                    "user_id": "User ID",
                    "user_password": "User password"
                },
                "data_description": {
                    "device_authentication": "This is set in the 'IP' panel of the interface in ETS.",
                    "user_id": "This is often tunnel number +1. So 'Tunnel 2' would have User-ID '3'.",
                    "user_password": "Password for the specific tunnel connection set in the 'Properties' panel of the tunnel in ETS."
                },
                "description": "Please enter your IP secure information.",
                "title": "Secure tunnelling"
            },
            "tunnel": {
                "data": {
                    "gateway": "KNX Tunnel Connection"
                },
                "description": "Please select a gateway from the list.",
                "title": "Tunnel"
            }
        }
    },
    "services": {
        "event_register": {
            "description": "Add or remove group addresses to knx_event filter for triggering `knx_event`s. Only addresses added with this service can be removed.",
            "fields": {
                "address": {
                    "description": "Group address(es) that shall be added or removed. Lists are allowed.",
                    "name": "Group address"
                },
                "remove": {
                    "description": "If `True` the group address(es) will be removed.",
                    "name": "Remove event registration"
                },
                "type": {
                    "description": "If set, the payload will be decoded as given DPT in the event data `value` key. KNX sensor types are valid values (see https://www.home-assistant.io/integrations/knx/#value-types).",
                    "name": "Value type"
                }
            },
            "name": "Registers knx_event"
        },
        "exposure_register": {
            "description": "Adds or remove exposures to KNX bus. Only exposures added with this service can be removed.",
            "fields": {
                "address": {
                    "description": "Group address state or attribute updates will be sent to. GroupValueRead requests will be answered. Per address only one exposure can be registered.",
                    "name": "Group address"
                },
                "attribute": {
                    "description": "Attribute of the entity that shall be sent to the KNX bus. If not set the state will be sent. Eg. for a light the state is eigther \u201con\u201d or \u201coff\u201d - with attribute you can expose its \u201cbrightness\u201d.",
                    "name": "Entity attribute"
                },
                "default": {
                    "description": "Default value to send to the bus if the state or attribute value is None. Eg. a light with state \u201coff\u201d has no brightness attribute so a default value of 0 could be used. If not set (or None) no value would be sent to the bus and a GroupReadRequest to the address would return the last known value.",
                    "name": "Default value"
                },
                "entity_id": {
                    "description": "Entity id whose state or attribute shall be exposed.",
                    "name": "Entity"
                },
                "remove": {
                    "description": "If `True` the exposure will be removed. Only `address` is required for removal.",
                    "name": "Remove exposure"
                },
                "type": {
                    "description": "Telegrams will be encoded as given DPT. 'binary' and all KNX sensor types are valid values (see https://www.home-assistant.io/integrations/knx/#value-types).",
                    "name": "Value type"
                }
            },
            "name": "Expose to KNX bus"
        },
        "read": {
            "description": "Send GroupValueRead requests to the KNX bus. Response can be used from `knx_event` and will be processed in KNX entities.",
            "fields": {
                "address": {
                    "description": "Group address(es) to send read request to. Lists will read multiple group addresses.",
                    "name": "Group address"
                }
            },
            "name": "Reads from KNX bus"
        },
        "reload": {
            "description": "Reloads the KNX integration.",
            "name": "Reload"
        },
        "send": {
            "description": "Sends arbitrary data directly to the KNX bus.",
            "fields": {
                "address": {
                    "description": "Group address(es) to write to. Lists will send to multiple group addresses successively.",
                    "name": "Group address"
                },
                "payload": {
                    "description": "Payload to send to the bus. Integers are treated as DPT 1/2/3 payloads. For DPTs > 6 bits send a list. Each value represents 1 octet (0-255). Pad with 0 to DPT byte length.",
                    "name": "Payload"
                },
                "response": {
                    "description": "If set to `True`, the telegram will be sent as a `GroupValueResponse` instead of a `GroupValueWrite`.",
                    "name": "Send as Response"
                },
                "type": {
                    "description": "If set, the payload will not be sent as raw bytes, but encoded as given DPT. KNX sensor types are valid values (see https://www.home-assistant.io/integrations/knx/#value-types).",
                    "name": "Value type"
                }
            },
            "name": "Send to KNX bus"
        }
    }
}