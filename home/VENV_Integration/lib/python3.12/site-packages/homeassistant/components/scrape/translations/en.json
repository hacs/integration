{
    "config": {
        "abort": {
            "already_configured": "Account is already configured"
        },
        "error": {
            "resource_error": "Could not update rest data. Verify your configuration"
        },
        "step": {
            "sensor": {
                "data": {
                    "attribute": "Attribute",
                    "availability": "Availability template",
                    "device_class": "Device class",
                    "index": "Index",
                    "name": "Name",
                    "select": "Select",
                    "state_class": "State class",
                    "unit_of_measurement": "Unit of measurement",
                    "value_template": "Value template"
                },
                "data_description": {
                    "attribute": "Get value of an attribute on the selected tag.",
                    "availability": "Defines a template to get the availability of the sensor.",
                    "device_class": "The type/class of the sensor to set the icon in the frontend.",
                    "index": "Defines which of the elements returned by the CSS selector to use.",
                    "select": "Defines what tag to search for. Check Beautifulsoup CSS selectors for details.",
                    "state_class": "The state_class of the sensor.",
                    "unit_of_measurement": "Choose unit of measurement or create your own.",
                    "value_template": "Defines a template to get the state of the sensor."
                }
            },
            "user": {
                "data": {
                    "authentication": "Select authentication method",
                    "encoding": "Character encoding",
                    "headers": "Headers",
                    "method": "Method",
                    "password": "Password",
                    "payload": "Payload",
                    "resource": "Resource",
                    "timeout": "Timeout",
                    "username": "Username",
                    "verify_ssl": "Verify SSL certificate"
                },
                "data_description": {
                    "authentication": "Type of the HTTP authentication. Either basic or digest.",
                    "encoding": "Character encoding to use. Defaults to UTF-8.",
                    "headers": "Headers to use for the web request.",
                    "payload": "Payload to use when method is POST.",
                    "resource": "The URL to the website that contains the value.",
                    "timeout": "Timeout for connection to website.",
                    "verify_ssl": "Enables/disables verification of SSL/TLS certificate, for example if it is self-signed."
                }
            }
        }
    },
    "options": {
        "step": {
            "add_sensor": {
                "data": {
                    "attribute": "Attribute",
                    "availability": "Availability template",
                    "device_class": "Device class",
                    "index": "Index",
                    "name": "Name",
                    "select": "Select",
                    "state_class": "State class",
                    "unit_of_measurement": "Unit of measurement",
                    "value_template": "Value template"
                },
                "data_description": {
                    "attribute": "Get value of an attribute on the selected tag.",
                    "availability": "Defines a template to get the availability of the sensor.",
                    "device_class": "The type/class of the sensor to set the icon in the frontend.",
                    "index": "Defines which of the elements returned by the CSS selector to use.",
                    "select": "Defines what tag to search for. Check Beautifulsoup CSS selectors for details.",
                    "state_class": "The state_class of the sensor.",
                    "unit_of_measurement": "Choose unit of measurement or create your own.",
                    "value_template": "Defines a template to get the state of the sensor."
                }
            },
            "edit_sensor": {
                "data": {
                    "attribute": "Attribute",
                    "availability": "Availability template",
                    "device_class": "Device class",
                    "index": "Index",
                    "name": "Name",
                    "select": "Select",
                    "state_class": "State class",
                    "unit_of_measurement": "Unit of measurement",
                    "value_template": "Value template"
                },
                "data_description": {
                    "attribute": "Get value of an attribute on the selected tag.",
                    "availability": "Defines a template to get the availability of the sensor.",
                    "device_class": "The type/class of the sensor to set the icon in the frontend.",
                    "index": "Defines which of the elements returned by the CSS selector to use.",
                    "select": "Defines what tag to search for. Check Beautifulsoup CSS selectors for details.",
                    "state_class": "The state_class of the sensor.",
                    "unit_of_measurement": "Choose unit of measurement or create your own.",
                    "value_template": "Defines a template to get the state of the sensor."
                }
            },
            "init": {
                "menu_options": {
                    "add_sensor": "Add sensor",
                    "remove_sensor": "Remove sensor",
                    "resource": "Configure resource",
                    "select_edit_sensor": "Configure sensor"
                }
            },
            "resource": {
                "data": {
                    "authentication": "Select authentication method",
                    "encoding": "Character encoding",
                    "headers": "Headers",
                    "method": "Method",
                    "password": "Password",
                    "payload": "Payload",
                    "resource": "Resource",
                    "timeout": "Timeout",
                    "username": "Username",
                    "verify_ssl": "Verify SSL certificate"
                },
                "data_description": {
                    "authentication": "Type of the HTTP authentication. Either basic or digest.",
                    "encoding": "Character encoding to use. Defaults to UTF-8.",
                    "headers": "Headers to use for the web request.",
                    "payload": "Payload to use when method is POST.",
                    "resource": "The URL to the website that contains the value.",
                    "timeout": "Timeout for connection to website.",
                    "verify_ssl": "Enables/disables verification of SSL/TLS certificate, for example if it is self-signed."
                }
            }
        }
    },
    "selector": {
        "device_class": {
            "options": {
                "apparent_power": "Apparent power",
                "aqi": "Air quality index",
                "atmospheric_pressure": "Atmospheric pressure",
                "battery": "Battery",
                "carbon_dioxide": "Carbon dioxide",
                "carbon_monoxide": "Carbon monoxide",
                "conductivity": "Conductivity",
                "current": "Current",
                "data_rate": "Data rate",
                "data_size": "Data size",
                "date": "Date",
                "distance": "Distance",
                "duration": "Duration",
                "energy": "Energy",
                "energy_storage": "Stored energy",
                "frequency": "Frequency",
                "gas": "Gas",
                "humidity": "Humidity",
                "illuminance": "Illuminance",
                "irradiance": "Irradiance",
                "moisture": "Moisture",
                "monetary": "Balance",
                "nitrogen_dioxide": "Nitrogen dioxide",
                "nitrogen_monoxide": "Nitrogen monoxide",
                "nitrous_oxide": "Nitrous oxide",
                "none": "No device class",
                "ozone": "Ozone",
                "ph": "pH",
                "pm1": "PM1",
                "pm10": "PM10",
                "pm25": "PM2.5",
                "power": "Power",
                "power_factor": "Power factor",
                "precipitation": "Precipitation",
                "precipitation_intensity": "Precipitation intensity",
                "pressure": "Pressure",
                "reactive_power": "Reactive power",
                "signal_strength": "Signal strength",
                "sound_pressure": "Sound pressure",
                "speed": "Speed",
                "sulphur_dioxide": "Sulphur dioxide",
                "temperature": "Temperature",
                "timestamp": "Timestamp",
                "volatile_organic_compounds": "VOCs",
                "volatile_organic_compounds_parts": "VOCs",
                "voltage": "Voltage",
                "volume": "Volume",
                "volume_flow_rate": "Volume flow rate",
                "volume_storage": "Stored volume",
                "water": "Water",
                "weight": "Weight",
                "wind_speed": "Wind speed"
            }
        },
        "state_class": {
            "options": {
                "measurement": "Measurement",
                "none": "No state class",
                "total": "Total",
                "total_increasing": "Total increasing"
            }
        },
        "unit_of_measurement": {
            "options": {
                "none": "No unit of measurement"
            }
        }
    }
}