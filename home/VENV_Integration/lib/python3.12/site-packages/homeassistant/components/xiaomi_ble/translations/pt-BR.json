{
    "config": {
        "abort": {
            "already_configured": "Dispositivo j\u00e1 est\u00e1 configurado",
            "already_in_progress": "O fluxo de configura\u00e7\u00e3o j\u00e1 est\u00e1 em andamento",
            "no_devices_found": "Nenhum dispositivo encontrado na rede",
            "reauth_successful": "A reautentica\u00e7\u00e3o foi bem-sucedida"
        },
        "error": {
            "decryption_failed": "A bindkey fornecida n\u00e3o funcionou, os dados do sensor n\u00e3o puderam ser descriptografados. Por favor verifique e tente novamente.",
            "expected_24_characters": "Esperado uma bindkey hexadecimal de 24 caracteres.",
            "expected_32_characters": "Esperado uma bindkey hexadecimal de 32 caracteres."
        },
        "step": {
            "bluetooth_confirm": {
                "description": "Deseja configurar {name}?"
            },
            "confirm_slow": {
                "description": "N\u00e3o houve uma transmiss\u00e3o deste dispositivo no \u00faltimo minuto, por isso n\u00e3o temos certeza se este dispositivo usa criptografia ou n\u00e3o. Isso pode ocorrer porque o dispositivo usa um intervalo de transmiss\u00e3o lento. Confirme para adicionar este dispositivo de qualquer maneira e, na pr\u00f3xima vez que uma transmiss\u00e3o for recebida, voc\u00ea ser\u00e1 solicitado a inserir sua bindkey, se necess\u00e1rio."
            },
            "get_encryption_key_4_5": {
                "data": {
                    "bindkey": "Bindkey"
                },
                "description": "Os dados do sensor transmitidos pelo sensor s\u00e3o criptografados. Para decifr\u00e1-lo, precisamos de uma bindkey hexadecimal de 32 caracteres."
            },
            "get_encryption_key_legacy": {
                "data": {
                    "bindkey": "Bindkey"
                },
                "description": "Os dados do sensor transmitidos pelo sensor s\u00e3o criptografados. Para decifr\u00e1-lo, precisamos de uma bindkey hexadecimal de 24 caracteres."
            },
            "user": {
                "description": "Escolha um dispositivo para configurar"
            }
        }
    },
    "device_automation": {
        "trigger_subtype": {
            "double_press": "Pressionado duas vezes",
            "long_press": "Pressionado longo",
            "motion_detected": "Movimento detectado",
            "press": "Pressionado",
            "rotate_left": "Girar para a esquerda",
            "rotate_left_pressed": "Girar para a esquerda (pressionado)",
            "rotate_right": "Girar para a direita",
            "rotate_right_pressed": "Girar para a direita (pressionado)"
        },
        "trigger_type": {
            "button": "Bot\u00e3o \"{subtype}\"",
            "button_air_exchange": "Button Air Exchange \"{subtype}\"",
            "button_brightness": "Bot\u00e3o de brilho \"{subtype}\"",
            "button_color_temperature": "Bot\u00e3o de temperatura de cor \"{subtype}\"",
            "button_decrease_speed": "Bot\u00e3o Diminuir velocidade \"{subtype}\"",
            "button_decrease_wind_speed": "Bot\u00e3o Diminuir velocidade do vento \"{subtype}\"",
            "button_dry": "Bot\u00e3o secar \"{subtype}\"",
            "button_fan": "Bot\u00e3o ventilador \"{subtype}\"",
            "button_heat": "Bot\u00e3o aquecimento \"{subtype}\"",
            "button_increase_wind_speed": "Bot\u00e3o Aumentar velocidade do vento \"{subtype}\"",
            "button_left": "Bot\u00e3o esquerdo \"{subtype}\"",
            "button_light": "Bot\u00e3o de luz \"{subtype}\"",
            "button_m": "Bot\u00e3o M \"{subtype}\"",
            "button_middle": "Bot\u00e3o do meio \"{subtype}\"",
            "button_min": "Bot\u00e3o Min \"{subtype}\"",
            "button_off": "Bot\u00e3o desligar \"{subtype}\"",
            "button_on": "Bot\u00e3o ligar \"{subtype}\"",
            "button_plus": "Bot\u00e3o de adi\u00e7\u00e3o \"{subtype}\"",
            "button_power": "Bot\u00e3o ligar \"{subtype}\"",
            "button_right": "Bot\u00e3o direito \"{subtype}\"",
            "button_stop": "Bot\u00e3o Parar \"{subtype}\"",
            "button_swing": "Bot\u00e3o Swing \"{subtype}\"",
            "button_timer_30_minutes": "Bot\u00e3o Timer 30 minutos \"{subtype}\"",
            "button_timer_60_minutes": "Bot\u00e3o Timer 30 minutos \"{subtype}\"",
            "button_wind_mode": "Bot\u00e3o Modo Vento \" {subtype} \"",
            "button_wind_speed": "Bot\u00e3o Velocidade do Vento \" {subtype} \"",
            "cube": "{subtype}",
            "dimmer": "{subtype}",
            "motion": "{subtype}",
            "motion_detected": "Movimento detectado"
        }
    },
    "entity": {
        "event": {
            "button": {
                "state_attributes": {
                    "event_type": {
                        "state": {
                            "double_press": "Pressionado duas vezes",
                            "long_press": "Pressionado longo",
                            "press": "Pressionado"
                        }
                    }
                }
            },
            "cube": {
                "state_attributes": {
                    "event_type": {
                        "state": {
                            "rotate_left": "Girar para a esquerda",
                            "rotate_right": "Girar para a direita"
                        }
                    }
                }
            },
            "dimmer": {
                "state_attributes": {
                    "event_type": {
                        "state": {
                            "long_press": "Pressionado longo",
                            "press": "Pressionado",
                            "rotate_left": "Girar para a esquerda",
                            "rotate_left_pressed": "Girar para a esquerda (pressionado)",
                            "rotate_right": "Girar para a direita",
                            "rotate_right_pressed": "Girar para a direita (pressionado)"
                        }
                    }
                }
            },
            "motion": {
                "state_attributes": {
                    "event_type": {
                        "state": {
                            "motion_detected": "Movimento detectado"
                        }
                    }
                }
            }
        }
    }
}