# commands.help for nlsearch.py (stored in json format)
# Automatically generated 2016-04-17T11:06:57.694132 from nl80211.h
# Additions for kernel version 4 added 2016-06-29T03:50:00.0

{"@NL80211_CMD_GET_REG": {"attrs": [], "desc": "ask the wireless core to send us its currently set\tregulatory domain."}, "@NL80211_CMD_STOP_SCHED_SCAN": {"attrs": [], "desc": "stop if scheduled scan is not running."}, "@NL80211_CMD_START_SCHED_SCAN": {"attrs": ["%NL80211_ATTR_SCHED_SCAN_INTERVAL", "%NL80211_ATTR_SCAN_SSIDS", "%NL80211_ATTR_SCAN_FREQUENCIES", "%NL80211_ATTR_IE"], "desc": "start intervals, as specified by %NL80211_ATTR_SCHED_SCAN_INTERVAL. Like with normal scans, if SSIDs (%NL80211_ATTR_SCAN_SSIDS) are passed, they are used in the probe requests. For broadcast, a broadcast SSID must be passed (ie. an empty string). If no SSID is passed, no probe requests are sent and a passive scan is performed. %NL80211_ATTR_SCAN_FREQUENCIES, if passed, define which channels should be scanned; if not passed, all channels allowed for the current regulatory domain are used. Extra IEs can also be passed from the userspace by using the %NL80211_ATTR_IE attribute."}, "@NL80211_CMD_NEW_SURVEY_RESULTS": {"attrs": [], "desc": "survey NL80211_CMD_GET_SURVEY and on the \"scan\" multicast group)"}, "@NL80211_CMD_SET_INTERFACE": {"attrs": ["%NL80211_ATTR_IFINDEX", "%NL80211_ATTR_IFTYPE"], "desc": "Set %NL80211_ATTR_IFINDEX and %NL80211_ATTR_IFTYPE."}, "@NL80211_CMD_DISASSOCIATE": {"attrs": [], "desc": "disassociation NL80211_CMD_AUTHENTICATE but for Disassociation frames (similar to MLME-DISASSOCIATE.request and MLME-DISASSOCIATE.indication primitives)."}, "@NL80211_CMD_FRAME": {"attrs": ["%NL80211_ATTR_FRAME", "%NL80211_ATTR_WIPHY_FREQ", "%NL80211_ATTR_DURATION", "%NL80211_ATTR_COOKIE", "%NL80211_ATTR_TX_NO_CCK_RATE"], "desc": "Management command is used both as a request to transmit a management frame and as an event indicating reception of a frame that was not processed in kernel code, but is for us (i.e., which may need to be processed in a user space application). %NL80211_ATTR_FRAME is used to specify the frame contents (including header). %NL80211_ATTR_WIPHY_FREQ is used to indicate on which channel the frame is to be transmitted or was received. If this channel is not the current channel (remain-on-channel or the operational channel) the device will switch to the given channel and transmit the frame, optionally waiting for a response for the time specified using %NL80211_ATTR_DURATION. When called, this operation returns a cookie (%NL80211_ATTR_COOKIE) that will be included with the TX status event pertaining to the TX request. %NL80211_ATTR_TX_NO_CCK_RATE is used to decide whether to send the management frames at CCK rate or not in 2GHz band."}, "@NL80211_CMD_NEW_KEY": {"attrs": ["%NL80211_ATTR_KEY_IDX", "%NL80211_ATTR_MAC", "%NL80211_ATTR_KEY_CIPHER", "%NL80211_ATTR_KEY_SEQ"], "desc": "add %NL80211_ATTR_KEY_IDX, %NL80211_ATTR_MAC, %NL80211_ATTR_KEY_CIPHER, and %NL80211_ATTR_KEY_SEQ attributes."}, "@NL80211_CMD_STOP_AP": {"attrs": [], "desc": "Stop"}, "@NL80211_CMD_DEL_INTERFACE": {"attrs": ["%NL80211_ATTR_IFINDEX", "%NL80211_ATTR_WIPHY", "%NL80211_ATTR_IFINDEX"], "desc": "Virtual %NL80211_ATTR_IFINDEX and %NL80211_ATTR_WIPHY. Can also be sent from userspace to request deletion of a virtual interface, then requires attribute %NL80211_ATTR_IFINDEX."}, "@NL80211_CMD_UNEXPECTED_4ADDR_FRAME": {"attrs": ["%NL80211_ATTR_MAC"], "desc": "Sent associated station identified by %NL80211_ATTR_MAC sent a 4addr frame and wasn't already in a 4-addr VLAN. The event will be sent similarly to the %NL80211_CMD_UNEXPECTED_FRAME event, to the same listener."}, "@NL80211_CMD_SET_MESH_CONFIG": {"attrs": ["%NL80211_ATTR_IFINDEX"], "desc": "Set interface identified by %NL80211_ATTR_IFINDEX"}, "@NL80211_CMD_STOP_P2P_DEVICE": {"attrs": ["%NL80211_ATTR_WDEV"], "desc": "Stop its %NL80211_ATTR_WDEV identifier."}, "@NL80211_CMD_START_P2P_DEVICE": {"attrs": ["%NL80211_ATTR_WDEV"], "desc": "Start its %NL80211_ATTR_WDEV identifier. It must have been created with %NL80211_CMD_NEW_INTERFACE previously. After it has been started, the P2P Device can be used for P2P operations, e.g. remain-on-channel and public action frame TX."}, "@NL80211_CMD_SET_COALESCE": {"attrs": [], "desc": "Configure"}, "@NL80211_CMD_DEL_WIPHY": {"attrs": ["%NL80211_ATTR_WIPHY", "%NL80211_ATTR_WIPHY_NAME"], "desc": "Wiphy %NL80211_ATTR_WIPHY and %NL80211_ATTR_WIPHY_NAME."}, "@NL80211_CMD_SET_STATION": {"attrs": ["%NL80211_ATTR_MAC", "%NL80211_ATTR_IFINDEX"], "desc": "Set %NL80211_ATTR_MAC on the interface identified by %NL80211_ATTR_IFINDEX."}, "@NL80211_CMD_LEAVE_MESH": {"attrs": [], "desc": "Leave network is determined by the network interface."}, "@NL80211_CMD_GET_KEY": {"attrs": ["%NL80211_ATTR_KEY_IDX", "%NL80211_ATTR_MAC"], "desc": "Get by %NL80211_ATTR_KEY_IDX and/or %NL80211_ATTR_MAC."}, "@NL80211_CMD_GET_SURVEY": {"attrs": [], "desc": "get"}, "@NL80211_CMD_TDLS_MGMT": {"attrs": [], "desc": "Send"}, "@NL80211_CMD_SET_BSS": {"attrs": ["%NL80211_ATTR_IFINDEX"], "desc": "Set %NL80211_ATTR_IFINDEX."}, "@NL80211_CMD_SET_WOWLAN": {"attrs": ["%NL80211_ATTR_WOWLAN_TRIGGERS"], "desc": "set Since wireless is more complex than wired ethernet, it supports various triggers. These triggers can be configured through this command with the %NL80211_ATTR_WOWLAN_TRIGGERS attribute. For more background information, see http://wireless.kernel.org/en/users/Documentation/WoWLAN. The @NL80211_CMD_SET_WOWLAN command can also be used as a notification from the driver reporting the wakeup reason. In this case, the @NL80211_ATTR_WOWLAN_TRIGGERS attribute will contain the reason for the wakeup, if it was caused by wireless. If it is not present in the wakeup notification, the wireless device didn't cause the wakeup but reports that it was woken up."}, "@NL80211_CMD_NEW_STATION": {"attrs": ["%NL80211_ATTR_IFINDEX"], "desc": "Add the interface identified by %NL80211_ATTR_IFINDEX."}, "@NL80211_CMD_SET_PMKSA": {"attrs": ["%NL80211_ATTR_PMKID"], "desc": "Add (for the BSSID) and %NL80211_ATTR_PMKID."}, "@NL80211_CMD_SET_MPATH": {"attrs": ["%NL80211_ATTR_MAC", "%NL80211_ATTR_IFINDEX"], "desc": " destination %NL80211_ATTR_MAC on the interface identified by %NL80211_ATTR_IFINDEX."}, "@NL80211_CMD_DEL_STATION": {"attrs": ["%NL80211_ATTR_IFINDEX"], "desc": "Remove or, if no MAC address given, all stations, on the interface identified by %NL80211_ATTR_IFINDEX."}, "@NL80211_CMD_UNPROT_DISASSOCIATE": {"attrs": [], "desc": "Unprotected notification. This event is used to indicate that an unprotected disassociation frame was dropped when MFP is in use."}, "@NL80211_CMD_CH_SWITCH_NOTIFY": {"attrs": ["%NL80211_ATTR_IFINDEX", "%NL80211_ATTR_WIPHY_FREQ"], "desc": "An independently of the userspace SME, send this event indicating %NL80211_ATTR_IFINDEX is now on %NL80211_ATTR_WIPHY_FREQ and the attributes determining channel width."}, "@NL80211_CMD_SET_KEY": {"attrs": ["%NL80211_ATTR_KEY_DEFAULT_MGMT", "%NL80211_ATTR_KEY_THRESHOLD"], "desc": "Set %NL80211_ATTR_KEY_DEFAULT_MGMT, or %NL80211_ATTR_KEY_THRESHOLD."}, "@NL80211_CMD_SET_MAC_ACL": {"attrs": ["%NL80211_ATTR_MAC_ADDRS", "%NL80211_ATTR_ACL_POLICY"], "desc": "sets This is to be used with the drivers advertising the support of MAC address based access control. List of MAC addresses is passed in %NL80211_ATTR_MAC_ADDRS and ACL policy is passed in %NL80211_ATTR_ACL_POLICY. Driver will enable ACL with this list, if it is not already done. The new list will replace any existing list. Driver will clear its ACL when the list of MAC addresses passed is empty. This command is used in AP/P2P GO mode. Driver has to make sure to clear its ACL list during %NL80211_CMD_STOP_AP."}, "@NL80211_CMD_GET_WOWLAN": {"attrs": [], "desc": "get"}, "@NL80211_CMD_GET_STATION": {"attrs": ["%NL80211_ATTR_MAC", "%NL80211_ATTR_IFINDEX"], "desc": "Get %NL80211_ATTR_MAC on the interface identified by %NL80211_ATTR_IFINDEX."}, "@NL80211_CMD_UNSPEC": {"attrs": [], "desc": "unspecified"}, "@NL80211_CMD_NEW_PEER_CANDIDATE": {"attrs": [], "desc": "Notification beacon or probe response from a compatible mesh peer. This is only sent while no station information (sta_info) exists for the new peer candidate and when @NL80211_MESH_SETUP_USERSPACE_AUTH, @NL80211_MESH_SETUP_USERSPACE_AMPE, or @NL80211_MESH_SETUP_USERSPACE_MPM is set. On reception of this notification, userspace may decide to create a new station (@NL80211_CMD_NEW_STATION). To stop this notification from reoccurring, the userspace authentication daemon may want to create the new station with the AUTHENTICATED flag unset and maybe change it later depending on the authentication result."}, "@NL80211_CMD_REGISTER_ACTION": {"attrs": [], "desc": "Alias backward compatibility"}, "@NL80211_CMD_REG_CHANGE": {"attrs": ["%NL80211_ATTR_REG_INITIATOR", "%NL80211_ATTR_REG_ALPHA2", "%NL80211_ATTR_REG_TYPE", "%NL80211_ATTR_REG_ALPHA2"], "desc": "indicates has been changed and provides details of the request information that caused the change such as who initiated the regulatory request (%NL80211_ATTR_REG_INITIATOR), the wiphy_idx (%NL80211_ATTR_REG_ALPHA2) on which the request was made from if the initiator was %NL80211_REGDOM_SET_BY_COUNTRY_IE or %NL80211_REGDOM_SET_BY_DRIVER, the type of regulatory domain set (%NL80211_ATTR_REG_TYPE), if the type of regulatory domain is %NL80211_REG_TYPE_COUNTRY the alpha2 to which we have moved on to (%NL80211_ATTR_REG_ALPHA2)."}, "@NL80211_CMD_CONN_FAILED": {"attrs": ["%NL80211_ATTR_CONN_FAILED_REASON"], "desc": "connection notify userspace that AP has rejected the connection request from a station, due to particular reason. %NL80211_ATTR_CONN_FAILED_REASON is used for this."}, "@NL80211_CMD_SCAN_ABORTED": {"attrs": [], "desc": "scan partial scan results may be available"}, "@NL80211_CMD_SET_POWER_SAVE": {"attrs": [], "desc": "Set"}, "@NL80211_CMD_SET_MGMT_EXTRA_IE": {"attrs": ["%NL80211_ATTR_IFINDEX", "%NL80211_ATTR_MGMT_SUBTYPE", "%NL80211_ATTR_IE"], "desc": "Set interface is identified with %NL80211_ATTR_IFINDEX and the management frame subtype with %NL80211_ATTR_MGMT_SUBTYPE. The extra IE data to be added to the end of the specified management frame is specified with %NL80211_ATTR_IE. If the command succeeds, the requested data will be added to all specified management frames generated by kernel/firmware/driver. Note: This command has been removed and it is only reserved at this point to avoid re-using existing command number. The functionality this command was planned for has been provided with cleaner design with the option to specify additional IEs in NL80211_CMD_TRIGGER_SCAN, NL80211_CMD_AUTHENTICATE, NL80211_CMD_ASSOCIATE, NL80211_CMD_DEAUTHENTICATE, and NL80211_CMD_DISASSOCIATE."}, "@NL80211_CMD_SET_REKEY_OFFLOAD": {"attrs": ["%NL80211_ATTR_REKEY_DATA"], "desc": "This the necessary information for supporting GTK rekey offload. This feature is typically used during WoWLAN. The configuration data is contained in %NL80211_ATTR_REKEY_DATA (which is nested and contains the data in sub-attributes). After rekeying happened, this command may also be sent by the driver as an MLME event to inform userspace of the new replay counter."}, "@NL80211_CMD_SET_CHANNEL": {"attrs": ["%NL80211_ATTR_IFINDEX"], "desc": "Set and the attributes determining channel width) the given interface (identifed by %NL80211_ATTR_IFINDEX) shall operate on. In case multiple channels are supported by the device, the mechanism with which it switches channels is implementation-defined. When a monitor interface is given, it can only switch channel while no other interfaces are operating to avoid disturbing the operation of any other interfaces, and other interfaces will again take precedence when they are used."}, "@NL80211_CMD_START_AP": {"attrs": ["%NL80211_ATTR_BEACON_INTERVAL", "%NL80211_ATTR_DTIM_PERIOD", "%NL80211_ATTR_SSID", "%NL80211_ATTR_HIDDEN_SSID", "%NL80211_ATTR_CIPHERS_PAIRWISE", "%NL80211_ATTR_CIPHER_GROUP", "%NL80211_ATTR_WPA_VERSIONS", "%NL80211_ATTR_AKM_SUITES", "%NL80211_ATTR_PRIVACY", "%NL80211_ATTR_AUTH_TYPE", "%NL80211_ATTR_INACTIVITY_TIMEOUT", "%NL80211_ATTR_ACL_POLICY", "%NL80211_ATTR_MAC_ADDRS", "%NL80211_ATTR_WIPHY_FREQ"], "desc": "Start are like for %NL80211_CMD_SET_BEACON, and additionally parameters that do not change are used, these include %NL80211_ATTR_BEACON_INTERVAL, %NL80211_ATTR_DTIM_PERIOD, %NL80211_ATTR_SSID, %NL80211_ATTR_HIDDEN_SSID, %NL80211_ATTR_CIPHERS_PAIRWISE, %NL80211_ATTR_CIPHER_GROUP, %NL80211_ATTR_WPA_VERSIONS, %NL80211_ATTR_AKM_SUITES, %NL80211_ATTR_PRIVACY, %NL80211_ATTR_AUTH_TYPE, %NL80211_ATTR_INACTIVITY_TIMEOUT, %NL80211_ATTR_ACL_POLICY and %NL80211_ATTR_MAC_ADDRS. The channel to use can be set on the interface or be given using the %NL80211_ATTR_WIPHY_FREQ and the attributes determining channel width."}, "@NL80211_CMD_DEL_PMKSA": {"attrs": ["%NL80211_ATTR_PMKID"], "desc": "Delete (for the BSSID) and %NL80211_ATTR_PMKID."}, "@NL80211_CMD_UNEXPECTED_FRAME": {"attrs": ["%NL80211_ATTR_MAC"], "desc": "Used (or GO) interface (i.e. hostapd) to ask for unexpected frames to implement sending deauth to stations that send unexpected class 3 frames. Also used as the event sent by the kernel when such a frame is received. For the event, the %NL80211_ATTR_MAC attribute carries the TA and other attributes like the interface index are present. If used as the command it must have an interface index and you can only unsubscribe from the event by closing the socket. Subscription is also for %NL80211_CMD_UNEXPECTED_4ADDR_FRAME events."}, "@NL80211_CMD_GET_MPATH": {"attrs": ["%NL80211_ATTR_MAC", "%NL80211_ATTR_IFINDEX"], "desc": "Get destination %NL80211_ATTR_MAC on the interface identified by %NL80211_ATTR_IFINDEX."}, "@NL80211_CMD_GET_BEACON": {"attrs": [], "desc": ""}, "@NL80211_CMD_PMKSA_CANDIDATE": {"attrs": [], "desc": "This of PMKSA caching dandidates."}, "@NL80211_CMD_PROBE_CLIENT": {"attrs": ["%NL80211_ATTR_IFINDEX", "%NL80211_ATTR_MAC", "%NL80211_ATTR_COOKIE", "%NL80211_ATTR_ACK"], "desc": "Probe by sending a null data frame to it and reporting when the frame is acknowleged. This is used to allow timing out inactive clients. Uses %NL80211_ATTR_IFINDEX and %NL80211_ATTR_MAC. The command returns a direct reply with an %NL80211_ATTR_COOKIE that is later used to match up the event with the request. The event includes the same data and has %NL80211_ATTR_ACK set if the frame was ACKed."}, "@NL80211_CMD_NEW_INTERFACE": {"attrs": ["%NL80211_ATTR_IFINDEX", "%NL80211_ATTR_WIPHY", "%NL80211_ATTR_IFTYPE", "%NL80211_ATTR_WIPHY", "%NL80211_ATTR_IFTYPE", "%NL80211_ATTR_IFNAME"], "desc": "Newly to %NL80211_CMD_GET_INTERFACE. Has %NL80211_ATTR_IFINDEX, %NL80211_ATTR_WIPHY and %NL80211_ATTR_IFTYPE attributes. Can also be sent from userspace to request creation of a new virtual interface, then requires attributes %NL80211_ATTR_WIPHY, %NL80211_ATTR_IFTYPE and %NL80211_ATTR_IFNAME."}, "@NL80211_CMD_SET_TX_BITRATE_MASK": {"attrs": ["%NL80211_ATTR_IFINDEX"], "desc": "Set rate selection. %NL80211_ATTR_IFINDEX is used to specify the interface and @NL80211_ATTR_TX_RATES the set of allowed rates."}, "@NL80211_CMD_NEW_SCAN_RESULTS": {"attrs": [], "desc": "scan NL80211_CMD_GET_SCAN and on the \"scan\" multicast group)"}, "@NL80211_CMD_GET_WIPHY": {"attrs": [], "desc": "request to get a list of all present wiphys."}, "@NL80211_CMD_SET_NOACK_MAP": {"attrs": [], "desc": "sets No Acknowledgement Policy should be applied."}, "@NL80211_CMD_ACTION": {"attrs": [], "desc": "Alias"}, "@NL80211_CMD_FLUSH_PMKSA": {"attrs": [], "desc": "Flush"}, "@NL80211_CMD_ASSOCIATE": {"attrs": [], "desc": "association NL80211_CMD_AUTHENTICATE but for Association and Reassociation (similar to MLME-ASSOCIATE.request, MLME-REASSOCIATE.request, MLME-ASSOCIATE.confirm or MLME-REASSOCIATE.confirm primitives)."}, "@NL80211_CMD_GET_PROTOCOL_FEATURES": {"attrs": ["%NL80211_ATTR_PROTOCOL_FEATURES"], "desc": "Get i.e. features for the nl80211 protocol rather than device features. Returns the features in the %NL80211_ATTR_PROTOCOL_FEATURES bitmap."}, "@NL80211_CMD_DEAUTHENTICATE": {"attrs": [], "desc": "deauthentication NL80211_CMD_AUTHENTICATE but for Deauthentication frames (similar to MLME-DEAUTHENTICATION.request and MLME-DEAUTHENTICATE.indication primitives)."}, "@NL80211_CMD_CRIT_PROTOCOL_STOP": {"attrs": [], "desc": "Indicates return back to normal."}, "@NL80211_CMD_FT_EVENT": {"attrs": [], "desc": "Send to the supplicant. This will carry the target AP's MAC address along with the relevant Information Elements. This event is used to report received FT IEs (MDIE, FTIE, RSN IE, TIE, RICIE)."}, "@NL80211_CMD_NEW_WIPHY": {"attrs": ["%NL80211_ATTR_WIPHY", "%NL80211_ATTR_WIPHY_NAME"], "desc": "Newly or rename notification. Has attributes %NL80211_ATTR_WIPHY and %NL80211_ATTR_WIPHY_NAME."}, "@NL80211_CMD_UPDATE_FT_IES": {"attrs": [], "desc": "Pass Information Element to the WLAN driver"}, "@NL80211_CMD_SET_WDS_PEER": {"attrs": [], "desc": "Set"}, "@NL80211_CMD_SCHED_SCAN_STOPPED": {"attrs": [], "desc": "indicates stopped. The driver may issue this event at any time during a scheduled scan. One reason for stopping the scan is if the hardware does not support starting an association or a normal scan while running a scheduled scan. This event is also sent when the %NL80211_CMD_STOP_SCHED_SCAN command is received or when the interface is brought down while a scheduled scan was running."}, "@NL80211_CMD_FRAME_TX_STATUS": {"attrs": ["%NL80211_ATTR_COOKIE", "%NL80211_ATTR_FRAME", "%NL80211_ATTR_ACK"], "desc": "Report transmitted with %NL80211_CMD_FRAME. %NL80211_ATTR_COOKIE identifies the TX command and %NL80211_ATTR_FRAME includes the contents of the frame. %NL80211_ATTR_ACK flag is included if the recipient acknowledged the frame."}, "@NL80211_CMD_TDLS_OPER": {"attrs": ["%NL80211_ATTR_TDLS_OPERATION", "%NL80211_ATTR_MAC", "%NL80211_ATTR_REASON_CODE"], "desc": "Perform In addition, this can be used as an event to request userspace to take actions on TDLS links (set up a new link or tear down an existing one). In such events, %NL80211_ATTR_TDLS_OPERATION indicates the requested operation, %NL80211_ATTR_MAC contains the peer MAC address, and %NL80211_ATTR_REASON_CODE the reason code to be used (only with %NL80211_TDLS_TEARDOWN)."}, "@NL80211_CMD_GET_SCAN": {"attrs": [], "desc": "get"}, "@NL80211_CMD_SET_WIPHY": {"attrs": ["%NL80211_ATTR_IFINDEX", "%NL80211_ATTR_WIPHY_NAME", "%NL80211_ATTR_WIPHY_TXQ_PARAMS", "%NL80211_ATTR_WIPHY_FREQ", "%NL80211_ATTR_WIPHY_RETRY_SHORT", "%NL80211_ATTR_WIPHY_RETRY_LONG", "%NL80211_ATTR_WIPHY_FRAG_THRESHOLD", "%NL80211_ATTR_WIPHY_RTS_THRESHOLD"], "desc": "set %NL80211_ATTR_IFINDEX; can be used to set %NL80211_ATTR_WIPHY_NAME, %NL80211_ATTR_WIPHY_TXQ_PARAMS, %NL80211_ATTR_WIPHY_FREQ (and the attributes determining the channel width; this is used for setting monitor mode channel), %NL80211_ATTR_WIPHY_RETRY_SHORT, %NL80211_ATTR_WIPHY_RETRY_LONG, %NL80211_ATTR_WIPHY_FRAG_THRESHOLD, and/or %NL80211_ATTR_WIPHY_RTS_THRESHOLD. However, for setting the channel, see %NL80211_CMD_SET_CHANNEL instead, the support here is for backward compatibility only."}, "@NL80211_CMD_AUTHENTICATE": {"attrs": ["%NL80211_ATTR_IFINDEX", "%NL80211_ATTR_MAC", "%NL80211_ATTR_SSID", "%NL80211_ATTR_WIPHY_FREQ", "%NL80211_ATTR_AUTH_TYPE", "%NL80211_ATTR_IE", "%NL80211_ATTR_FRAME", "%NL80211_ATTR_FRAME", "%NL80211_ATTR_TIMED_OUT", "%NL80211_ATTR_MAC"], "desc": "authentication This command is used both as a command (request to authenticate) and as an event on the \"mlme\" multicast group indicating completion of the authentication process. When used as a command, %NL80211_ATTR_IFINDEX is used to identify the interface. %NL80211_ATTR_MAC is used to specify PeerSTAAddress (and BSSID in case of station mode). %NL80211_ATTR_SSID is used to specify the SSID (mainly for association, but is included in authentication request, too, to help BSS selection. %NL80211_ATTR_WIPHY_FREQ is used to specify the frequence of the channel in MHz. %NL80211_ATTR_AUTH_TYPE is used to specify the authentication type. %NL80211_ATTR_IE is used to define IEs (VendorSpecificInfo, but also including RSN IE and FT IEs) to be added to the frame. When used as an event, this reports reception of an Authentication frame in station and IBSS modes when the local MLME processed the frame, i.e., it was for the local STA and was received in correct state. This is similar to MLME-AUTHENTICATE.confirm primitive in the MLME SAP interface (kernel providing MLME, userspace SME). The included %NL80211_ATTR_FRAME attribute contains the management frame (including both the header and frame body, but not FCS). This event is also used to indicate if the authentication attempt timed out. In that case the %NL80211_ATTR_FRAME attribute is replaced with a %NL80211_ATTR_TIMED_OUT flag (and %NL80211_ATTR_MAC to indicate which pending authentication timed out)."}, "@NL80211_CMD_DEL_PATH": {"attrs": ["%NL80211_ATTR_IFINDEX"], "desc": "Remove or, if no MAC address given, all mesh paths, on the interface identified by %NL80211_ATTR_IFINDEX."}, "@NL80211_CMD_GET_MESH_CONFIG": {"attrs": ["%NL80211_ATTR_IFINDEX"], "desc": "Get interface identified by %NL80211_ATTR_IFINDEX"}, "@NL80211_CMD_NEW_PATH": {"attrs": ["%NL80211_ATTR_IFINDEX"], "desc": "Add the interface identified by %NL80211_ATTR_IFINDEX."}, "@NL80211_CMD_NEW_MPATH": {"attrs": ["%NL80211_ATTR_MAC", "%NL80211_ATTR_MPATH_NEXT_HOP"], "desc": "Create %NL80211_ATTR_MAC via %NL80211_ATTR_MPATH_NEXT_HOP."}, "@NL80211_CMD_MICHAEL_MIC_FAILURE": {"attrs": ["%NL80211_ATTR_MAC", "%NL80211_ATTR_KEY_TYPE", "%NL80211_ATTR_KEY_IDX", "%NL80211_ATTR_KEY_SEQ"], "desc": "notification MIC (part of TKIP) failure; sent on the \"mlme\" multicast group; the event includes %NL80211_ATTR_MAC to describe the source MAC address of the frame with invalid MIC, %NL80211_ATTR_KEY_TYPE to show the key type, %NL80211_ATTR_KEY_IDX to indicate the key identifier, and %NL80211_ATTR_KEY_SEQ to indicate the TSC value of the frame; this event matches with MLME-MICHAELMICFAILURE.indication() primitive"}, "@NL80211_CMD_SET_WIPHY_NETNS": {"attrs": [], "desc": "Set associated with this wiphy must be down and will follow."}, "@NL80211_CMD_DEL_KEY": {"attrs": ["%NL80211_ATTR_MAC"], "desc": "delete or %NL80211_ATTR_MAC."}, "@NL80211_CMD_SET_CQM": {"attrs": [], "desc": "Connection is used to configure connection quality monitoring notification trigger levels."}, "@NL80211_CMD_REMAIN_ON_CHANNEL": {"attrs": ["%NL80211_ATTR_IFINDEX", "%NL80211_ATTR_WIPHY_FREQ", "%NL80211_ATTR_DURATION", "%NL80211_ATTR_COOKIE"], "desc": "Request channel for the specified amount of time. This can be used to do off-channel operations like transmit a Public Action frame and wait for a response while being associated to an AP on another channel. %NL80211_ATTR_IFINDEX is used to specify which interface (and thus radio) is used. %NL80211_ATTR_WIPHY_FREQ is used to specify the frequency for the operation. %NL80211_ATTR_DURATION is used to specify the duration in milliseconds to remain on the channel. This command is also used as an event to notify when the requested duration starts (it may take a while for the driver to schedule this time due to other concurrent needs for the radio). When called, this operation returns a cookie (%NL80211_ATTR_COOKIE) that will be included with any events pertaining to this request; the cookie is also used to cancel the request."}, "@NL80211_CMD_JOIN_IBSS": {"attrs": ["%NL80211_ATTR_BEACON_INTERVAL"], "desc": "Join FREQ attribute (for the initial frequency if no peer can be found) and optionally a MAC (as BSSID) and FREQ_FIXED attribute if those should be fixed rather than automatically determined. Can only be executed on a network interface that is UP, and fixed BSSID/FREQ may be rejected. Another optional parameter is the beacon interval, given in the %NL80211_ATTR_BEACON_INTERVAL attribute, which if not given defaults to 100 TU (102.4ms)."}, "@NL80211_CMD_REG_BEACON_HINT": {"attrs": ["%NL80211_ATTR_WIPHY", "%NL80211_ATTR_FREQ_BEFORE", "%NL80211_ATTR_FREQ_AFTER"], "desc": "indicates has been found while world roaming thus enabling active scan or any mode of operation that initiates TX (beacons) on a channel where we would not have been able to do either before. As an example if you are world roaming (regulatory domain set to world or if your driver is using a custom world roaming regulatory domain) and while doing a passive scan on the 5 GHz band you find an AP there (if not on a DFS channel) you will now be able to actively scan for that AP or use AP mode on your card on that same channel. Note that this will never be used for channels 1-11 on the 2 GHz band as they are always enabled world wide. This beacon hint is only sent if your device had either disabled active scanning or beaconing on a channel. We send to userspace the wiphy on which we removed a restriction from (%NL80211_ATTR_WIPHY) and the channel on which this occurred before (%NL80211_ATTR_FREQ_BEFORE) and after (%NL80211_ATTR_FREQ_AFTER) the beacon hint was processed."}, "@NL80211_CMD_CRIT_PROTOCOL_START": {"attrs": [], "desc": "Indicates a critical protocol that needs more reliability in the connection to complete."}, "@NL80211_CMD_UNPROT_DEAUTHENTICATE": {"attrs": [], "desc": "Unprotected notification. This event is used to indicate that an unprotected deauthentication frame was dropped when MFP is in use."}, "@NL80211_CMD_REQ_SET_REG": {"attrs": [], "desc": "ask to the specified ISO/IEC 3166-1 alpha2 country code. The core will store this as a valid request and then query userspace for it."}, "@NL80211_CMD_SCHED_SCAN_RESULTS": {"attrs": [], "desc": "indicates results available."}, "@NL80211_CMD_REGISTER_BEACONS": {"attrs": [], "desc": "Register other BSSes when any interfaces are in AP mode. This helps implement OLBC handling in hostapd. Beacons are reported in %NL80211_CMD_FRAME messages. Note that per PHY only one application may register."}, "@NL80211_CMD_NEW_BEACON": {"attrs": [], "desc": "old"}, "@NL80211_CMD_NOTIFY_CQM": {"attrs": [], "desc": "Connection command is used as an event to indicate the that a trigger level was reached."}, "@NL80211_CMD_TRIGGER_SCAN": {"attrs": ["%NL80211_ATTR_TX_NO_CCK_RATE"], "desc": "trigger %NL80211_ATTR_TX_NO_CCK_RATE is used to decide whether to send the probe requests at CCK rate or not."}, "@NL80211_CMD_CANCEL_REMAIN_ON_CHANNEL": {"attrs": ["%NL80211_ATTR_WIPHY", "%NL80211_ATTR_IFINDEX", "%NL80211_ATTR_COOKIE"], "desc": "This pending remain-on-channel duration if the desired operation has been completed prior to expiration of the originally requested duration. %NL80211_ATTR_WIPHY or %NL80211_ATTR_IFINDEX is used to specify the radio. The %NL80211_ATTR_COOKIE attribute must be given as well to uniquely identify the request. This command is also used as an event to notify when a requested remain-on-channel duration has expired."}, "@NL80211_CMD_REGISTER_FRAME": {"attrs": [], "desc": "Register (via @NL80211_CMD_FRAME) for processing in userspace. This command requires an interface index, a frame type attribute (optional for backward compatibility reasons, if not given assumes action frames) and a match attribute containing the first few bytes of the frame that should match, e.g. a single byte for only a category match or four bytes for vendor frames including the OUI. The registration cannot be dropped, but is removed automatically when the netlink socket is closed. Multiple registrations can be made."}, "@NL80211_CMD_CHANNEL_SWITCH": {"attrs": ["%NL80211_ATTR_CH_SWITCH_COUNT", "%NL80211_ATTR_WIPHY_FREQ", "%NL80211_ATTR_CH_SWITCH_BLOCK_TX"], "desc": "Perform the new channel information (Channel Switch Announcement - CSA) in the beacon for some time (as defined in the %NL80211_ATTR_CH_SWITCH_COUNT parameter) and then change to the new channel. Userspace provides the new channel information (using %NL80211_ATTR_WIPHY_FREQ and the attributes determining channel width). %NL80211_ATTR_CH_SWITCH_BLOCK_TX may be supplied to inform other station that transmission must be blocked until the channel switch is complete."}, "@NL80211_CMD_GET_INTERFACE": {"attrs": ["%NL80211_ATTR_WIPHY", "%NL80211_ATTR_IFINDEX"], "desc": "Request either a dump request on a %NL80211_ATTR_WIPHY or a specific get on an %NL80211_ATTR_IFINDEX is supported."}, "@NL80211_CMD_RADAR_DETECT": {"attrs": ["%NL80211_ATTR_RADAR_EVENT"], "desc": "Start a radar is detected or the channel availability scan (CAC) has finished or was aborted, or a radar was detected, usermode will be notified with this event. This command is also used to notify userspace about radars while operating on this channel. %NL80211_ATTR_RADAR_EVENT is used to inform about the type of the event."}, "@NL80211_CMD_GET_POWER_SAVE": {"attrs": [], "desc": "Get"}, "@NL80211_CMD_DISCONNECT": {"attrs": ["%NL80211_ATTR_DISCONNECTED_BY_AP", "%NL80211_ATTR_REASON_CODE"], "desc": "drop userspace that a connection was dropped by the AP or due to other reasons, for this the %NL80211_ATTR_DISCONNECTED_BY_AP and %NL80211_ATTR_REASON_CODE attributes are used."}, "@NL80211_CMD_CONNECT": {"attrs": ["%NL80211_ATTR_SSID", "%NL80211_ATTR_IE", "%NL80211_ATTR_AUTH_TYPE", "%NL80211_ATTR_USE_MFP", "%NL80211_ATTR_MAC", "%NL80211_ATTR_WIPHY_FREQ", "%NL80211_ATTR_CONTROL_PORT", "%NL80211_ATTR_CONTROL_PORT_ETHERTYPE", "%NL80211_ATTR_CONTROL_PORT_NO_ENCRYPT", "%NL80211_ATTR_BG_SCAN_PERIOD"], "desc": "connection requests to connect to a specified network but without separating auth and assoc steps. For this, you need to specify the SSID in a %NL80211_ATTR_SSID attribute, and can optionally specify the association IEs in %NL80211_ATTR_IE, %NL80211_ATTR_AUTH_TYPE, %NL80211_ATTR_USE_MFP, %NL80211_ATTR_MAC, %NL80211_ATTR_WIPHY_FREQ, %NL80211_ATTR_CONTROL_PORT, %NL80211_ATTR_CONTROL_PORT_ETHERTYPE and %NL80211_ATTR_CONTROL_PORT_NO_ENCRYPT. Background scan period can optionally be specified in %NL80211_ATTR_BG_SCAN_PERIOD, if not specified default background scan configuration in driver is used and if period value is 0, bg scan will be disabled. This attribute is ignored if driver does not support roam scan. It is also sent as an event, with the BSSID and response IEs when the connection is established or failed to be established. This can be determined by the STATUS_CODE attribute."}, "@NL80211_CMD_SET_BEACON": {"attrs": ["%NL80211_ATTR_BEACON_HEAD", "%NL80211_ATTR_BEACON_TAIL", "%NL80211_ATTR_IE", "%NL80211_ATTR_IE_PROBE_RESP", "%NL80211_ATTR_IE_ASSOC_RESP"], "desc": "change using the %NL80211_ATTR_BEACON_HEAD and %NL80211_ATTR_BEACON_TAIL attributes. For drivers that generate the beacon and probe responses internally, the following attributes must be provided: %NL80211_ATTR_IE, %NL80211_ATTR_IE_PROBE_RESP and %NL80211_ATTR_IE_ASSOC_RESP."}, "@NL80211_CMD_ACTION_TX_STATUS": {"attrs": [], "desc": "Alias backward compatibility."}, "@NL80211_CMD_JOIN_MESH": {"attrs": [], "desc": "Join mesh config parameters may be given."}, "@NL80211_CMD_ROAM": {"attrs": [], "desc": "request sent as an event when the card/driver roamed by itself."}, "@NL80211_CMD_SET_REG": {"attrs": ["%NL80211_ATTR_REG_ALPHA", "%NL80211_ATTR_REG_RULE_FREQ_", "%NL80211_ATTR_FREQ_RANGE_MAX_BW", "%NL80211_ATTR_REG_RULE_POWER_MAX_ANT_GAIN", "%NL80211_ATTR_REG_RULE_POWER_MAX_EIRP"], "desc": "Set after being queried by the kernel. CRDA replies by sending a regulatory domain structure which consists of %NL80211_ATTR_REG_ALPHA set to our current alpha2 if it found a match. It also provides NL80211_ATTR_REG_RULE_FLAGS, and a set of regulatory rules. Each regulatory rule is a nested set of attributes given by %NL80211_ATTR_REG_RULE_FREQ_[START|END] and %NL80211_ATTR_FREQ_RANGE_MAX_BW with an attached power rule given by %NL80211_ATTR_REG_RULE_POWER_MAX_ANT_GAIN and %NL80211_ATTR_REG_RULE_POWER_MAX_EIRP."}, "@NL80211_CMD_GET_COALESCE": {"attrs": [], "desc": "Get"}, "@NL80211_CMD_FRAME_WAIT_CANCEL": {"attrs": [], "desc": "When command may be used with the corresponding cookie to cancel the wait time if it is known that it is no longer necessary."}, "@NL80211_CMD_DEL_BEACON": {"attrs": [], "desc": "old"}, "@NL80211_CMD_LEAVE_IBSS": {"attrs": [], "desc": "Leave determined by the network interface."}, "@NL80211_CMD_SET_MCAST_RATE": {"attrs": [], "desc": "Change for IBSS or MESH vif."}, "@NL80211_CMD_TESTMODE": {"attrs": [], "desc": "testmode to identify the device, and the TESTDATA blob attribute to pass through to the driver."}, "@NL80211_CMD_DEL_MPATH": {"attrs": ["%NL80211_ATTR_MAC"], "desc": "Delete %NL80211_ATTR_MAC."}, "@NL80211_CMD_ADD_TX_TS": {"attrs": ["%NL80211_ATTR_TSID", "%NL80211_ATTR_MAC","%NL80211_ATTR_USER_PRIO","%NL80211_ATTR_ADMITTED_TIME"],"desc": "Ask the kernel to add a traffic stream for the given %NL80211_ATTR_TSID and %NL80211_ATTR_MAC with %NL80211_ATTR_USER_PRIO and %NL80211_ATTR_ADMITTED_TIME parameters. Note that the action frame handshake with the AP shall be handled by userspace via the normal management RX/TX framework, this only sets up the TX TS in the driver/device. If the admitted time attribute is not added then the request just checksif a subsequent setup could be successful, the intent is to use this to avoid setting up a session with the AP when local restrictions would make that impossible. However, the subsequent real setup may still fail even if the check was successful."}, "@NL80211_CMD_DEL_TX_TS": {"attrs": ["%NL80211_ATTR_MAC","%NL80211_ATTR_TSID"], "desc": "Remove an existing TS with the %NL80211_ATTR_TSID and %NL80211_ATTR_MAC parameters. It isn't necessary to call this before removing a station entry entirely, or before disassociating or similar, cleanup will happen in the driver/device in this case."}, "@NL80211_CMD_GET_MPP": {"attrs": ["%NL80211_ATTR_MAC","%NL80211_ATTR_IFINDEX"], "desc": "Get mesh path attributes for mesh proxy path to destination %NL80211_ATTR_MAC on the interface identified by %NL80211_ATTR_IFINDEX."}, "@NL80211_CMD_JOIN_OCB": {"attrs": [], "desc": "Join the OCB network. The center frequency and bandwidth of a channel must be given."}, "@NL80211_CMD_LEAVE_OCB": {"attrs": [], "desc": "Leave the OCB network -- no special arguments, the network is determined by the network interface."}, "@NL80211_CMD_TDLS_CHANNEL_SWITCH": {"attrs": ["%NL80211_ATTR_MAC","%NL80211_ATTR_MAC","%NL80211_ATTR_WIPHY_FREQ","%NL80211_ATTR_OPER_CLASS"], "desc": "Start channel-switching with a TDLS peer, identified by the %NL80211_ATTR_MAC parameter. A target channel is provided via %NL80211_ATTR_WIPHY_FREQ and other attributes determining channel width/type. The target operating class is given via %NL80211_ATTR_OPER_CLASS. The driver is responsible for continually initiating channel-switching operations and returning to the base channel for communication with the AP."}, "@NL80211_CMD_TDLS_CANCEL_CHANNEL_SWITCH": {"attrs": ["%NL80211_ATTR_MAC"], "desc": "Stop channel-switching with a TDLS peer given by %NL80211_ATTR_MAC. Both peers must be on the base channel when this command completes."}, "@NL80211_CMD_WIPHY_REG_CHANGE": {"attrs": [], "desc": "Similar to %NL80211_CMD_REG_CHANGE, but used as an event to indicate changes for devices with wiphy-specific regdom management."},"@NL80211_CMD_VENDOR":{"attrs":["%NL80211_ATTR_VENDOR_ID","%NL80211_ATTR_VENDOR_SUBCMD","%NL80211_ATTR_VENDOR_DATA"], "desc":"Vendor-specified command/event. The command is specified by the %NL80211_ATTR_VENDOR_ID attribute and a sub-command in %NL80211_ATTR_VENDOR_SUBCMD. Parameter(s) can be transported in %NL80211_ATTR_VENDOR_DATA. For feature advertisement, the %NL80211_ATTR_VENDOR_DATA attribute is used in the wiphy data as a nested attribute containing descriptions (&struct nl80211_vendor_cmd_info) of the supported vendor commands. This may also be sent as an event with the same attributes."}, "@NL80211_CMD_SET_QOS_MAP": {"attrs":["%NL80211_ATTR_QOS_MAP"], "desc":"Set Interworking QoS mapping for IP DSCP values. The QoS mapping information is included in %NL80211_ATTR_QOS_MAP. If that attribute is not included, QoS mapping is disabled. Since this QoS mapping is relevant for IP packets, it is only valid during an association. This is cleared on disassociation and AP restart."}}
{"0": "@NL80211_CMD_UNSPEC", "1": "@NL80211_CMD_GET_WIPHY", "2": "@NL80211_CMD_SET_WIPHY", "3": "@NL80211_CMD_NEW_WIPHY", "4": "@NL80211_CMD_DEL_WIPHY", "5": "@NL80211_CMD_GET_INTERFACE", "6": "@NL80211_CMD_SET_INTERFACE", "7": "@NL80211_CMD_NEW_INTERFACE", "8": "@NL80211_CMD_DEL_INTERFACE", "9": "@NL80211_CMD_GET_KEY", "10": "@NL80211_CMD_SET_KEY", "11": "@NL80211_CMD_NEW_KEY", "12": "@NL80211_CMD_DEL_KEY", "13": "@NL80211_CMD_GET_BEACON", "14": "@NL80211_CMD_SET_BEACON", "15": ["@NL80211_CMD_START_AP", "@NL80211_CMD_NEW_BEACON"], "16": ["@NL80211_CMD_STOP_AP", "@NL80211_CMD_DEL_BEACON"], "17": "@NL80211_CMD_GET_STATION", "18": "@NL80211_CMD_SET_STATION", "19": "@NL80211_CMD_NEW_STATION", "20": "@NL80211_CMD_DEL_STATION", "21": "@NL80211_CMD_GET_MPATH", "22": "@NL80211_CMD_SET_MPATH", "23": "@NL80211_CMD_NEW_MPATH", "24": "@NL80211_CMD_DEL_MPATH", "25": "@NL80211_CMD_SET_BSS", "26": "@NL80211_CMD_SET_REG", "27": "@NL80211_CMD_REQ_SET_REG", "28": "@NL80211_CMD_GET_MESH_CONFIG", "29": "@NL80211_CMD_SET_MESH_CONFIG", "30": "@NL80211_CMD_SET_MGMT_EXTRA_IE", "31": "@NL80211_CMD_GET_REG", "32": "@NL80211_CMD_GET_SCAN", "33": "@NL80211_CMD_TRIGGER_SCAN", "34": "@NL80211_CMD_NEW_SCAN_RESULTS", "35": "@NL80211_CMD_SCAN_ABORTED", "36": "@NL80211_CMD_REG_CHANGE", "37": "@NL80211_CMD_AUTHENTICATE", "38": "@NL80211_CMD_ASSOCIATE", "39": "@NL80211_CMD_DEAUTHENTICATE", "40": "@NL80211_CMD_DISASSOCIATE", "41": "@NL80211_CMD_MICHAEL_MIC_FAILURE", "42": "@NL80211_CMD_REG_BEACON_HINT", "43": "@NL80211_CMD_JOIN_IBSS", "44": "@NL80211_CMD_LEAVE_IBSS", "45": "@NL80211_CMD_TESTMODE", "46": "@NL80211_CMD_CONNECT", "47": "@NL80211_CMD_ROAM", "48": "@NL80211_CMD_DISCONNECT", "49": "@NL80211_CMD_SET_WIPHY_NETNS", "50": "@NL80211_CMD_GET_SURVEY", "51": "@NL80211_CMD_NEW_SURVEY_RESULTS", "52": "@NL80211_CMD_SET_PMKSA", "53": "@NL80211_CMD_DEL_PMKSA", "54": "@NL80211_CMD_FLUSH_PMKSA", "55": "@NL80211_CMD_REMAIN_ON_CHANNEL", "56": "@NL80211_CMD_CANCEL_REMAIN_ON_CHANNEL", "57": "@NL80211_CMD_SET_TX_BITRATE_MASK", "58": ["@NL80211_CMD_REGISTER_ACTION", "@NL80211_CMD_REGISTER_FRAME"], "59": ["@NL80211_CMD_FRAME", "@NL80211_CMD_ACTION"], "60": ["@NL80211_CMD_FRAME_TX_STATUS", "@NL80211_CMD_ACTION_TX_STATUS"], "61": "@NL80211_CMD_SET_POWER_SAVE", "62": "@NL80211_CMD_GET_POWER_SAVE", "63": "@NL80211_CMD_SET_CQM", "64": "@NL80211_CMD_NOTIFY_CQM", "65": "@NL80211_CMD_SET_CHANNEL", "66": "@NL80211_CMD_SET_WDS_PEER", "67": "@NL80211_CMD_FRAME_WAIT_CANCEL", "68": "@NL80211_CMD_JOIN_MESH", "69": "@NL80211_CMD_LEAVE_MESH", "70": "@NL80211_CMD_UNPROT_DEAUTHENTICATE", "71": "@NL80211_CMD_UNPROT_DISASSOCIATE", "72": "@NL80211_CMD_NEW_PEER_CANDIDATE", "73": "@NL80211_CMD_GET_WOWLAN", "74": "@NL80211_CMD_SET_WOWLAN", "75": "@NL80211_CMD_START_SCHED_SCAN", "76": "@NL80211_CMD_STOP_SCHED_SCAN", "77": "@NL80211_CMD_SCHED_SCAN_RESULTS", "78": "@NL80211_CMD_SCHED_SCAN_STOPPED", "79": "@NL80211_CMD_SET_REKEY_OFFLOAD", "80": "@NL80211_CMD_PMKSA_CANDIDATE", "81": "@NL80211_CMD_TDLS_OPER", "82": "@NL80211_CMD_TDLS_MGMT", "83": "@NL80211_CMD_UNEXPECTED_FRAME", "84": "@NL80211_CMD_PROBE_CLIENT", "85": "@NL80211_CMD_REGISTER_BEACONS", "86": "@NL80211_CMD_UNEXPECTED_4ADDR_FRAME", "87": "@NL80211_CMD_SET_NOACK_MAP", "88": "@NL80211_CMD_CH_SWITCH_NOTIFY", "89": "@NL80211_CMD_START_P2P_DEVICE", "90": "@NL80211_CMD_STOP_P2P_DEVICE", "91": "@NL80211_CMD_CONN_FAILED", "92": "@NL80211_CMD_SET_MCAST_RATE", "93": "@NL80211_CMD_SET_MAC_ACL", "94": "@NL80211_CMD_RADAR_DETECT", "95": "@NL80211_CMD_GET_PROTOCOL_FEATURES", "96": "@NL80211_CMD_UPDATE_FT_IES", "97": "@NL80211_CMD_FT_EVENT", "98": "@NL80211_CMD_CRIT_PROTOCOL_START", "99": "@NL80211_CMD_CRIT_PROTOCOL_STOP", "100": "@NL80211_CMD_GET_COALESCE", "101": "@NL80211_CMD_SET_COALESCE", "102": "@NL80211_CMD_CHANNEL_SWITCH", "103": "@NL80211_CMD_VENDOR", "104": "@NL80211_CMD_SET_QOS_MAP", "105": "@NL80211_CMD_ADD_TX_TS", "106": "@NL80211_CMD_DEL_TX_TS", "107": "@NL80211_CMD_GET_MPP", "108": "@NL80211_CMD_JOIN_OCB", "109": "@NL80211_CMD_LEAVE_OCB", "110": "@NL80211_CMD_SWITCH_STARTED_NOTIFY", "111": "@NL80211_CMD_TDLS_CHANNEL_SWITCH", "112": "@NL80211_CMD_TDLS_CANCEL_CHANNEL_SWITCH", "113": "@NL80211_CMD_WIPHY_REG_CHANGE"}